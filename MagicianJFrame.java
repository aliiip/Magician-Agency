
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;

public class magicianJFrame extends javax.swing.JFrame {

    public magicianJFrame() {
        initComponents();

        holidayComboBox.setModel(new javax.swing.DefaultComboBoxModel(Holiday.getAllHolidays()));
        holidayComboBox2.setModel(new javax.swing.DefaultComboBoxModel(Holiday.getAllHolidays()));
        magicianComboBox.setModel(new javax.swing.DefaultComboBoxModel(Magician.getAllMagicians()));
        magicianComboBox2.setModel(new javax.swing.DefaultComboBoxModel(Magician.getAllMagicians()));
        bookingStatus();
        holidayStatus();
        waitingListStatus();
        magicianStatus();

        ButtonEventHandler butt = new ButtonEventHandler();
        bookButton.addActionListener(butt);
        customerTextField.addActionListener(butt);
        holidayStatusButton.addActionListener(butt);
        magicianStatusButton.addActionListener(butt);
        waitingListStatusButton.addActionListener(butt);
        addHolidayButton.addActionListener(butt);
        addHolidayTextField.addActionListener(butt);
        addMagicianButton.addActionListener(butt);
        addMagicianTextField.addActionListener(butt);
        cancelBookingButton.addActionListener(butt);
        cancelWaitListButton.addActionListener(butt);
        dropMagicianButton.addActionListener(butt);

    }

    public class ButtonEventHandler implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent act) {
            if (act.getSource() == bookButton) {
                Timestamp timestamp = new Timestamp(Calendar.getInstance().getTime().getTime());
                Booking.addBooking(holidayComboBox.getSelectedItem().toString(), customerTextField.getText(), Magician.getFreeMagician(), timestamp);
                bookingStatus();
                waitingListStatus();
            } else if (act.getSource() == holidayStatusButton) {
                holidayStatus();
            } else if (act.getSource() == magicianStatusButton) {
                magicianStatus();
            } else if (act.getSource() == waitingListStatusButton) {
                waitingListStatus();
            } else if (act.getSource() == addHolidayButton) {
                Holiday.addHoliday(addHolidayTextField.getText());
                holidayComboBox.setModel(new javax.swing.DefaultComboBoxModel(Holiday.getAllHolidays()));
                holidayComboBox2.setModel(new javax.swing.DefaultComboBoxModel(Holiday.getAllHolidays()));
            } else if (act.getSource() == addMagicianButton) {
                Magician.addMagician(addMagicianTextField.getText());
                waitingListStatus();
                magicianComboBox.setModel(new javax.swing.DefaultComboBoxModel(Magician.getAllMagicians()));
                magicianComboBox2.setModel(new javax.swing.DefaultComboBoxModel(Magician.getAllMagicians()));
                bookingStatus();
            } else if (act.getSource() == cancelBookingButton) {
                int cellColumn = 0;
                int cellRow = bookingsTable.getSelectedRow();
                String magician = Booking.cancelBooking(bookingsTable.getValueAt(cellRow, cellColumn).toString());
                WaitingList.checkWaitingList(magician);
                bookingStatus();
                waitingListStatus();
            } else if (act.getSource() == cancelWaitListButton) {
                int cellColumn = 1;
                int cellRow = waitinglistTable.getSelectedRow();
                WaitingList.cancelWaitingList(waitinglistTable.getValueAt(cellRow, cellColumn).toString());
                waitingListStatus();
            } else if (act.getSource() == dropMagicianButton) {
                Magician.removeMagician(magicianComboBox2.getSelectedItem().toString());
                magicianStatus();
                magicianComboBox.setModel(new javax.swing.DefaultComboBoxModel(Magician.getAllMagicians()));
                magicianComboBox2.setModel(new javax.swing.DefaultComboBoxModel(Magician.getAllMagicians()));
                bookingStatus();
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        addTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        customerTextField = new javax.swing.JTextField();
        holidayComboBox = new javax.swing.JComboBox();
        bookButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookingsTable = new javax.swing.JTable();
        cancelBookingButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        holidayComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        holidayStatusButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        holidayTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        addHolidayTextField = new javax.swing.JTextField();
        addHolidayButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        magicianComboBox = new javax.swing.JComboBox();
        magicianStatusButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        magicianTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        addMagicianTextField = new javax.swing.JTextField();
        addMagicianButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        magicianComboBox2 = new javax.swing.JComboBox();
        dropMagicianButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        waitingListStatusButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        waitinglistTable = new javax.swing.JTable();
        cancelWaitListButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Magician Booking");

        jLabel4.setText("Customer Name:");

        jLabel5.setText("Holiday:");

        customerTextField.setColumns(13);

        holidayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayComboBoxActionPerformed(evt);
            }
        });

        bookButton.setText("Book");

        bookingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(bookingsTable);

        cancelBookingButton.setText("Cancel Selected Booking");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(holidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bookButton)
                .addContainerGap(37, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelBookingButton)
                .addGap(165, 165, 165))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(customerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(holidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelBookingButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        customerTextField.getAccessibleContext().setAccessibleName("CustomerNameText");
        holidayComboBox.getAccessibleContext().setAccessibleName("HolidayComboBox");
        holidayComboBox.getAccessibleContext().setAccessibleDescription("");

        addTab.addTab("Book", jPanel1);

        jLabel2.setText("Holiday:");

        holidayComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayComboBox2ActionPerformed(evt);
            }
        });

        holidayStatusButton.setText("Get Holiday Status");
        holidayStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayStatusButtonActionPerformed(evt);
            }
        });

        holidayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(holidayTable);

        jLabel10.setText("Holiday to add:");

        addHolidayTextField.setColumns(10);

        addHolidayButton.setText("Add Holiday");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(520, 520, 520)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(holidayComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(holidayStatusButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addHolidayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addHolidayButton)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(holidayComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holidayStatusButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(addHolidayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addHolidayButton))
                .addGap(7, 7, 7)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        holidayComboBox2.getAccessibleContext().setAccessibleName("HolidayComboBox");

        addTab.addTab("Holiday Status", jPanel2);

        jLabel7.setText("Magician:");

        magicianStatusButton.setText("Get Magician Status");

        magicianTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(magicianTable);

        jLabel11.setText("Magician to add:");

        addMagicianTextField.setColumns(10);

        addMagicianButton.setText("Add Magician");

        jLabel3.setText("Magician to drop:");

        magicianComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                magicianComboBox2ActionPerformed(evt);
            }
        });

        dropMagicianButton.setText("Drop Magician");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(magicianComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(magicianStatusButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(jLabel11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(addMagicianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addMagicianButton))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(magicianComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dropMagicianButton)))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(magicianComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(magicianStatusButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(addMagicianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMagicianButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(magicianComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropMagicianButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addTab.addTab("Magician Status", jPanel3);

        waitingListStatusButton.setText("Get Waitinglist Status");

        waitinglistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(waitinglistTable);

        cancelWaitListButton.setText("Cancel Selected Booking");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(waitingListStatusButton)
                        .addGap(172, 172, 172))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(cancelWaitListButton)
                        .addGap(164, 164, 164))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(waitingListStatusButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelWaitListButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addTab.addTab("Waitinglist Status", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(184, 184, 184))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addTab)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addTab, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addTab.getAccessibleContext().setAccessibleName("TabPane");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void holidayStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayStatusButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_holidayStatusButtonActionPerformed

    private void holidayComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_holidayComboBox2ActionPerformed

    private void holidayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_holidayComboBoxActionPerformed

    private void magicianComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_magicianComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_magicianComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(magicianJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(magicianJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(magicianJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(magicianJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new magicianJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addHolidayButton;
    private javax.swing.JTextField addHolidayTextField;
    private javax.swing.JButton addMagicianButton;
    private javax.swing.JTextField addMagicianTextField;
    private static javax.swing.JTabbedPane addTab;
    private javax.swing.JButton bookButton;
    private static javax.swing.JTable bookingsTable;
    private javax.swing.JButton cancelBookingButton;
    private javax.swing.JButton cancelWaitListButton;
    private javax.swing.JTextField customerTextField;
    private javax.swing.JButton dropMagicianButton;
    private static javax.swing.JComboBox holidayComboBox;
    private static javax.swing.JComboBox holidayComboBox2;
    private javax.swing.JButton holidayStatusButton;
    private static javax.swing.JTable holidayTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private static javax.swing.JComboBox magicianComboBox;
    private javax.swing.JComboBox magicianComboBox2;
    private javax.swing.JButton magicianStatusButton;
    private static javax.swing.JTable magicianTable;
    private static javax.swing.JButton waitingListStatusButton;
    private static javax.swing.JTable waitinglistTable;
    // End of variables declaration//GEN-END:variables

    //Updates the table that outputs holiday statuses
    public static void holidayStatus() {

        ArrayList<BookingEntry> allBookings = new ArrayList<>();

        if (holidayComboBox2.getSelectedItem() != null) {
            allBookings = Booking.getBookingsByHoliday(holidayComboBox2.getSelectedItem().toString());
        }

        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        Object[] columnName = new Object[4];

        columnName[0] = "Holiday";
        columnName[1] = "Customer";
        columnName[2] = "Magician";
        columnName[3] = "Timestamp";

        model.setColumnIdentifiers(columnName);
        Object[] rowData = new Object[4];

        for (BookingEntry b : allBookings) {
            rowData[0] = b.getHoliday();
            rowData[1] = b.getCustomer();
            rowData[2] = b.getMagician();
            rowData[3] = b.getTimestamp();

            model.addRow(rowData);

        }
        holidayTable.setModel(model);
    }

    //Updates the table that outputs magician statuses
    public static void magicianStatus() {

        ArrayList<BookingEntry> allBookings = new ArrayList<>();

        if (magicianComboBox.getSelectedItem() != null) {
            allBookings = Booking.getBookingsByMagician(magicianComboBox.getSelectedItem().toString());

            DefaultTableModel model = new DefaultTableModel();
            model.setRowCount(0);
            Object[] columnName = new Object[4];

            columnName[0] = "Magician";
            columnName[1] = "Customer";
            columnName[2] = "Holiday";
            columnName[3] = "Timestamp";

            model.setColumnIdentifiers(columnName);
            Object[] rowData = new Object[4];

            for (BookingEntry b : allBookings) {
                rowData[0] = b.getMagician();
                rowData[1] = b.getCustomer();
                rowData[2] = b.getHoliday();
                rowData[3] = b.getTimestamp();

                model.addRow(rowData);

            }

            magicianTable.setModel(model);
        }
    }

    //Updates the table that outputs waitinglist status
    public static void waitingListStatus() {

        ArrayList<WaitingListEntry> allBookings = WaitingList.getWaitingList();

        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        Object[] columnName = new Object[3];

        columnName[0] = "Holiday";
        columnName[1] = "Customer";
        columnName[2] = "Timestamp";

        model.setColumnIdentifiers(columnName);
        Object[] rowData = new Object[4];

        for (WaitingListEntry b : allBookings) {
            rowData[0] = b.getHoliday();
            rowData[1] = b.getCustomer();
            rowData[2] = b.getTimestamp();

            model.addRow(rowData);

        }
        waitinglistTable.setModel(model);
    }

    //Updates the table that outputs booking statuses
    public static void bookingStatus() {

        ArrayList<BookingEntry> allBookings = Booking.getAllBookings();

        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        Object[] columnName = new Object[4];

        columnName[0] = "Customer";
        columnName[1] = "Holiday";
        columnName[2] = "Magician";
        columnName[3] = "Timestamp";

        model.setColumnIdentifiers(columnName);
        Object[] rowData = new Object[4];

        for (BookingEntry b : allBookings) {
            rowData[0] = b.getCustomer();
            rowData[1] = b.getHoliday();
            rowData[2] = b.getMagician();
            rowData[3] = b.getTimestamp();

            model.addRow(rowData);
        }

        bookingsTable.setModel(model);
    }

}
